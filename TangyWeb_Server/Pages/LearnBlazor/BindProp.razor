@page "/learnBlazor/bindprop"
<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3>Product Playground</h3><hr/>

        <div>
            <input type="checkbox" @bind="@Product.IsActive"/><br/>
        </div>
        <div>
            Price: <input type="number" @bind="Product.Price" @bind:event="oninput"/><br/>
        </div>
        <div>
            Product Propertirs:
            <select @bind="SelectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
    </div>
    <div class="col-6 border p-3">
        <h3>Product Summary</h3><hr/>
        Name: @Product.Name<br/>
        Active: @Product.IsActive<br/>
        Price: @Product.Price<br/>
        This Product is: @(Product.IsActive ? "Active" : "Inactive")<br/>
        Property Selected: @SelectedProp <br/>
        @if (!string.IsNullOrWhiteSpace(SelectedProp))
        {
            <p>Property Value: @Product.ProductProperties.FirstOrDefault(u => u.Key == SelectedProp).Value</p>
        }
    </div>

    <br/>
    <div class="col-12 p-4">
        <h2 class="text-success"> Product Table</h2>
        <table class="table table-striped">
            <tbody>
            @foreach (var p in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind="p.Name" @bind:event="oninput"/>
                    </td>
                    <td>
                        <input type="number" @bind="p.Price" @bind:event="oninput"/>
                    </td>
                    <td>
                        <input type="checkbox" @bind="@p.IsActive"/><br/>
                    </td>
                </tr>
            }
            </tbody>
        </table>
        
        <br/><br/>
        <h2>Product Summary</h2>
        @foreach (var p in Products)
        {
            <p>@p.Name [@p.Price] is @(p.IsActive ? "Active" : "Inactive")</p>
        }
    </div>
</div>


@code {

    private string SelectedProp = "";

    Demo_Product Product = new()
    {
        Id = 1,
        Name = "Rose Candle",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<Demo_ProductProp>()
        {
            new Demo_ProductProp { Id = 1, Key = "Colour", Value = "Black" },
            new Demo_ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmin" },
            new Demo_ProductProp { Id = 3, Key = "Size", Value = "20oz" }
        }
    };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 10.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 14.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
            }
        });
    }

}