@page "/learnBlazor/demoproduct"

<h2 class="text-primary">Demo Product</h2>
<p>Favourites Total: @SelectedFavouriteCount</p>
<p>Last Selected Product: @LastSelectedProduct</p>

<div class="border p2 m2" style="background-color: azure">
    <div class="row">
        @foreach(var product in Products)
        {
            <_ProductComponent Product="product" OnFavoriteUpdated="FavouriteCountUpdate" OnProductChange="SelectedProductUpdated">
                <FirstFragment>#1</FirstFragment>
                <SecondFragment>#2</SecondFragment>
            </_ProductComponent>
        }
    </div>

</div>


@code {
    List<Demo_Product> Products = new();
    private int SelectedFavouriteCount { get; set; } = 0;
    private string LastSelectedProduct { get; set; }

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 10.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 14.99,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
            }
        });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavouriteCount++;
        }
        else
        {
            SelectedFavouriteCount--;
        }
    }

    protected void SelectedProductUpdated(string productName)
    {
        LastSelectedProduct = productName;
    }

}