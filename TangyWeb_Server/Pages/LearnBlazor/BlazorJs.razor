@page "/learnBlazor/blazorJs"
@inject IJSRuntime _JsRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary m-2" style="width: 200px;" @onclick="TestConfirmBox">Test Confirm Button</button>
</div><br/>

<div class="row">
    <button class="btn btn-success m-2" style="width: 200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" style="width: 200px;" @onclick="ToastrFail">Toastr Fail</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" style="width: 200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-2" style="width: 200px;" @onclick="SweetAlertFail">SweetAlert Fail</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation Pending!</p>
    }
</div>

@code {

    private string confirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", confirmMessage);
    }

    private void ToastrSuccess()
    {
        _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private void ToastrFail()
    {
        _JsRuntime.ToastrError("Operation Failed");
    }

    private async void SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "success", "Task completed Successfully!");
    }

    private async void SweetAlertFail()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSweetAlert", "error", "Task Failed!");
    }

}